import logging
import random

from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove

from buttons import game_callback_data, game_kb, rules_kb, play_kb
from casic import calculate_score, get_shuffled_deck, dealer_and_player_hand, hand_texts, get_card_text
from config import key
from states import OurStates
from user_class import User

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=key)
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

user_mapping: dict[int, User] = dict()


@dp.message_handler(commands=['start'], state="*")
async def greetings(message: types.Message):
    user_id = message.from_id
    if user_id not in user_mapping:
        user_mapping[user_id] = User(
            user_id=user_id
        )
    with open('photo1689150138.jpeg', 'rb') as photo:
        await bot.send_photo(user_id, photo, caption='–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ blackjack. –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—ë –∏–º—è.'
                             )

    await OurStates.enter_name.set()


@dp.message_handler(commands=["me"], state="*")
async def profile(message: types.Message):
    if message.from_id not in user_mapping:
        await message.answer("–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–ø–∏—à–∏—Ç–µ /start.")
        return
    user = user_mapping[message.from_id]
    await message.answer(f'–í–∞—à–µ –∏–º—è: {user.name}\n'
                         f'–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.count}\n'
                         f'–ö–æ–ª-–≤–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö / –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä: {user.games}/{user.wins}')


@dp.message_handler(commands=['top10'], state="*")
async def top_10_users(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –±–∞–ª–∞–Ω—Å—É –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ç–æ–ø 10
    top_users = sorted(user_mapping.values(), key=lambda u: u.count, reverse=True)[:10]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞
    text = "–¢–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É:\n"
    for i, user in enumerate(top_users, start=1):
        text += f"{i}. {user.name}: ${user.count}\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(text)


@dp.message_handler(state=OurStates.enter_name)
async def name_entered(message: types.Message):
    user_id = message.from_id
    user = user_mapping[user_id]
    user.name = message.text

    hello_msg = f'–ü—Ä–∏–≤–µ—Ç, {user_mapping[user_id].name}. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É Black Jack! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏:'
    await message.reply(hello_msg, reply_markup=rules_kb)
    await message.answer('–ï—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å –Ω–∞–∂–∏–º–∞–π play', reply_markup=play_kb)

    await OurStates.wait_for_play.set()


@dp.message_handler(commands=['play'], state=OurStates.wait_for_play)
@dp.callback_query_handler(game_callback_data.filter(action="play"), state=OurStates.wait_for_play)
async def start_game(message: types.Message | types.CallbackQuery):
    user = user_mapping[message.from_user.id]

    if isinstance(message, types.CallbackQuery):
        call = message
        await bot.answer_callback_query(call.id)
        await bot.send_message(call.from_user.id,
                               f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç ${user.count}")
    else:
        await message.reply(f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç ${user.count}")
    await OurStates.bet.set()


@dp.message_handler(state=OurStates.bet)
async def set_bet(message: types.Message):
    user = user_mapping[message.from_id]

    bet_str = message.text
    if bet_str.isdigit() and int(bet_str) <= user.count:
        user.bet = int(bet_str)
    else:
        with open('714502432ca8252b8a2645b302622f2b.jpg', 'rb') as photo:
            await bot.send_photo(message.from_id, photo,
                                 "–í—ã –¥—É–º–∞–µ—Ç–µ –≤—ã –º–µ–Ω—è –ø–µ—Ä–µ–∏–≥—Ä–∞–µ—Ç–µ))). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É –µ—â–µ —Ä–∞–∑")
            return

    user.count -= user.bet

    # –ù–æ–≤–∞—è —Ä–∞–∑–¥–∞—á–∞
    user.deck = get_shuffled_deck()
    dealer_and_player_hand(user)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∞–º–∏ –∏–≥—Ä–æ–∫–∞ –∏ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ–π –¥–∏–ª–µ—Ä–∞
    player_hand_str = "\n".join(hand_texts(user.player_hand))
    player_score = calculate_score(user.player_hand)
    dealer_card = get_card_text(user.dealer_hand[0])
    await message.reply(f'üí≤ —Å—Ç–∞–≤–∫–∞ ‚Äî ${user.bet} \n'
                        f'üí≥ –±–∞–ª–∞–Ω—Å ‚Äî ${user.count}')
    await message.reply(f"‚Ä¢ –í–∞—à–∏ –∫–∞—Ä—Ç—ã({player_score} –æ—á–∫–æ–≤): \n"
                        f"{player_hand_str}.\n \n"
                        f"‚Ä¢ –ö–∞—Ä—Ç–∞ –¥–∏–ª–µ—Ä–∞: \n {dealer_card}.")

    # –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ —Å—Ä–∞–∑—É –±–ª—ç–∫–¥–∂–µ–∫ (21 –æ—á–∫–æ), –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è
    if player_score == 21:
        with open('chelovechek-veselyy_55399611_orig_.jpeg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption="–£ –≤–∞—Å –±–ª—ç–∫–¥–∂–µ–∫! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
        user.count += 2 * user.bet
        user.wins += 1
        user.games += 1
        await message.answer(
            '–ü–æ–∫–∞ –≤—ã –∏–≥—Ä–∞–ª–∏ –º—ã —Å–æ–∑–¥–∞–ª–∏ –≤–∞–º –ø—Ä–æ—Ñ–∏–ª—å(/me), —Ç–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.')
        await message.reply('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ –ø–∏—à–∏—Ç–µ play', reply_markup=play_kb)
        return
    else:
        # –ò–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –µ—â–µ –∫–∞—Ä—Ç—É –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: hit - –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É, stand - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.",
                             reply_markup=game_kb)
    await OurStates.playing.set()


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∑—è—Ç–∏—è –∫–∞—Ä—Ç—ã
@dp.callback_query_handler(game_callback_data.filter(action="hit"), state=OurStates.playing)
@dp.message_handler(Text(equals="Hit"), state=OurStates.playing)
@dp.message_handler(commands=['hit'], state=OurStates.playing)
async def hit(message: types.Message):
    if isinstance(message, types.CallbackQuery):
        call = message
        message = call.message
        await bot.answer_callback_query(call.id)
        await bot.delete_message(message.chat.id, message.message_id)
        user = user_mapping[call.from_user.id]
    else:
        user = user_mapping[message.from_user.id]
        message = message
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–ª–æ–¥—É –∏ —Ä—É–∫–∏ –∏–≥—Ä–æ–∫–∞ –∏ –¥–∏–ª–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    deck = user.deck
    player_hand = user.player_hand
    dealer_hand = user.dealer_hand

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫—É –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
    new_card = deck.pop()
    player_hand.append(new_card)

    while calculate_score(dealer_hand) < 17:
        new_card1 = deck.pop()
        dealer_hand.append(new_card1)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ–π –∏–≥—Ä–æ–∫–∞ –∏ —Å—É–º–º–æ–π –æ—á–∫–æ–≤
    player_hand_desc = "\n".join(hand_texts(user.player_hand))

    dealer_hand_desc = "\n".join(hand_texts(user.dealer_hand))

    player_score = calculate_score(player_hand)
    dealer_score = calculate_score(dealer_hand)
    await message.answer(
        f"–í—ã –≤–∑—è–ª–∏ –∫–∞—Ä—Ç—É {get_card_text(new_card)}.\n"
        f"‚Ä¢ –í–∞—à–∏ –∫–∞—Ä—Ç—ã({player_score} –æ—á–∫–æ–≤):\n "
        f"{player_hand_desc}.")

    # –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –±–æ–ª—å—à–µ 21 –æ—á–∫–∞, –æ–Ω –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç
    if player_score > 21 and dealer_score < player_score:
        with open('nepobeda.jpg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption="–£ –≤–∞—Å –ø–µ—Ä–µ–±–æ—Ä! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!",
                                 reply_markup=ReplyKeyboardRemove())
        user.games += 1
        if user.count <= 0:
            user.count += 10
            await message.answer(
                '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –æ–±–∞–Ω–∫—Ä–æ—Ç–∏–ª–∏—Å—å, –Ω–æ –º—ã –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–ª–∏ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–≤–µ–ª–∏ –≤–∞–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ $10. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±—É–¥—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ')
        await message.answer(
            '–ü–æ–∫–∞ –≤—ã –∏–≥—Ä–∞–ª–∏ –º—ã —Å–æ–∑–¥–∞–ª–∏ –≤–∞–º –ø—Ä–æ—Ñ–∏–ª—å(/me), —Ç–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.')
        await message.answer('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ –ø–∏—à–∏—Ç–µ play',
                             reply_markup=play_kb)
        await OurStates.wait_for_play.set()
    elif 21 < player_score < dealer_score:
        await message.answer(f'‚Ä¢ –ö–∞—Ä—Ç–∞ –¥–∏–ª–µ—Ä–∞({dealer_score} –æ—á–∫–æ–≤): \n'
                             f' {dealer_hand_desc}.')
        with open('chelovechek-veselyy_55399611_orig_.jpeg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption='–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏. –£ –î–∏–ª–µ—Ä–∞ –ø–µ—Ä–µ–±–æ—Ä',
                                 reply_markup=ReplyKeyboardRemove())
        user.count += 2 * user.bet
        user.wins += 1
        user.games += 1
        await message.answer(
            '–ü–æ–∫–∞ –≤—ã –∏–≥—Ä–∞–ª–∏ –º—ã —Å–æ–∑–¥–∞–ª–∏ –≤–∞–º –ø—Ä–æ—Ñ–∏–ª—å(/me), —Ç–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.')
        await message.answer('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ –ø–∏—à–∏—Ç–µ play',
                             reply_markup=play_kb)
        await OurStates.wait_for_play.set()
    else:
        # –ò–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –µ—â–µ –∫–∞—Ä—Ç—É –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: hit - –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É, stand - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.", reply_markup=game_kb)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
@dp.callback_query_handler(game_callback_data.filter(action="stand"), state=OurStates.playing)
@dp.message_handler(Text(equals="Stand"), state=OurStates.playing)
@dp.message_handler(commands=['stand'], state=OurStates.playing)
async def stand(message: types.Message | types.CallbackQuery):
    if isinstance(message, types.CallbackQuery):
        call = message
        message = call.message
        await bot.answer_callback_query(call.id)
        await bot.delete_message(message.chat.id, message.message_id)
        user = user_mapping[call.from_user.id]
    else:
        user = user_mapping[message.from_user.id]
        message = message

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–ª–æ–¥—É –∏ —Ä—É–∫–∏ –∏–≥—Ä–æ–∫–∞ –∏ –¥–∏–ª–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    deck = user.deck
    player_hand = user.player_hand
    dealer_hand = user.dealer_hand

    # –î–∏–ª–µ—Ä –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—ã, –ø–æ–∫–∞ –µ–≥–æ —Å—á–µ—Ç –º–µ–Ω—å—à–µ 17
    while calculate_score(dealer_hand) < 17:
        new_card = random.choice(deck)
        dealer_hand.append(new_card)
        deck.remove(new_card)

    cards_desc = []
    for card in dealer_hand:
        nominal, color = card
        desc = f"{nominal} {color}"
        cards_desc.append(desc)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∞–º–∏ –¥–∏–ª–µ—Ä–∞ –∏ –µ–≥–æ —Å—É–º–º–æ–π –æ—á–∫–æ–≤
    await message.answer(f"–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞: {', '.join(cards_desc)}. –°—É–º–º–∞ –æ—á–∫–æ–≤: {calculate_score(dealer_hand)}.")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    player_score = calculate_score(player_hand)
    dealer_score = calculate_score(dealer_hand)

    if player_score > dealer_score:
        with open('chelovechek-veselyy_55399611_orig_.jpeg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption="–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
        user.count += 2 * user.bet
        user.wins += 1

    elif player_score < dealer_score < 22:
        with open('nepobeda.jpg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption="–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
    elif dealer_score > 21:
        with open('chelovechek-veselyy_55399611_orig_.jpeg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption="–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
        user.count += 2 * user.bet
        user.wins += 1
    else:
        with open('nepobeda.jpg', 'rb') as photo:
            await bot.send_photo(user.user_id, photo, caption="–ù–∏—á—å—è!")
        user.count += user.bet
    if user.count == 0:
        user.count += 10
        await message.answer(
            '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –æ–±–∞–Ω–∫—Ä–æ—Ç–∏–ª–∏—Å—å, –Ω–æ –º—ã –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–ª–∏ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–≤–µ–ª–∏ –≤–∞–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ $10. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±—É–¥—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ')
    await message.answer('–ü–æ–∫–∞ –≤—ã –∏–≥—Ä–∞–ª–∏ –º—ã —Å–æ–∑–¥–∞–ª–∏ –≤–∞–º –ø—Ä–æ—Ñ–∏–ª—å(/me), —Ç–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.')
    await message.answer('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ –ø–∏—à–∏—Ç–µ play',
                         reply_markup=play_kb)
    user.games += 1
    await OurStates.wait_for_play.set()


if __name__ == '__main__':
    executor.start_polling(
        dispatcher=dp,
        skip_updates=True
    )
